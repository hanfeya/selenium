Reference url:http://selenium.googlecode.com/git/docs/api/py/webdriver_remote/selenium.webdriver.remote.webdriver.html#module-selenium.webdriver.remote.webdriver
Attributes(属性)
命令行执行：command.CommandExecutor对象用于执行命令
command_executor - The command.CommandExecutor object used to execute commands.
异常处理：errorhandler.ErrorHandler 对象用于确保服务器不返回error
error_handler - errorhandler.ErrorHandler object used to verify that the server did not return an error.
session_id:session ID 通过每个命令发送
session_id - The session ID to send with every command.
capabilities:基本的浏览器功能字典，session的实例化
capabilities - A dictionary of capabilities of the underlying browser for this instance’s session.
代理：selenium.webdriver.comon.proxy.Proxy 对象，为这个浏览器指定一个代理
proxy - A selenium.webdriver.common.proxy.Proxy object, to specify a proxy for the browser to use


add_cookie(cookie_dict)
	Adds a cookie to your current session.
	cookie_dict：A dictionary object, with required keys - “name” and “value”;
				optional keys - “path”, “domain”, “secure”, “expiry”
	Usage：driver.add_cookie({‘name’ : ‘foo’, ‘value’ : ‘bar’})
			driver.add_cookie({‘name’ : ‘foo’, ‘value’ : ‘bar’, ‘path’ : ‘/’}) 
			driver.add_cookie({‘name’ : ‘foo’, ‘value’ : ‘bar’, ‘path’ : ‘/’, ‘secure’:True})
back()
	Usage:driver.back()
close()
	Usage:driver.close()
create_web_element(element_id)
	Creates a web element with the specified element_id.
current_url
	Gets the URL of the current page.
	Usage:driver.current_url
current_window_handle
	Returns the handle of the current window.
	Usage:driver.current_window_handle
delete_all_cookies()
	Delete all cookies in the scope of the session.
	Usage:driver.delete_all_cookies()
delete_cookie(name)
	Deletes a single cookie with the given name
	Usage:driver.delete_cookie(‘my_cookie’)
desired_capabilities
	returns the drivers current desired capabilities being used
execute(driver_command, params=None)
	Sends a command to be executed by a command.CommandExecutor.
		driver_command: The name of the command to execute as a string.
		params: A dictionary of named parameters to send with the command.
	returns:The command’s JSON response loaded into a dictionary object.
execute_async_script(script, *args)
	Asynchronously Executes JavaScript in the current window/frame.
		script: The JavaScript to execute.
		*args: Any applicable arguments for your JavaScript.
	Usage:driver.execute_async_script(‘document.title’)
execute_script(script, *args)
	Synchronously Executes JavaScript in the current window/frame.
		script: The JavaScript to execute.
		*args: Any applicable arguments for your JavaScript.
find_element(by='id', value=None)
	‘Private’ method used by the find_element_by_* methods.
	Usage:Use the corresponding find_element_by_* instead of this.
	Return type:WebElement
find_element_by_class_name(name)[source]
	Finds an element by class name.
		name: The class name of the element to find.
	Usage:driver.find_element_by_class_name(‘foo’)
find_element_by_css_selector(css_selector)
	Finds an element by css selector.
		css_selector: The css selector to use when finding elements.
	Usage:driver.find_element_by_css_selector(‘#foo’)
find_element_by_id(id_)
	Finds an element by id.
		id_ - The id of the element to be found.
	Usage:driver.find_element_by_id(‘foo’)
find_element_by_link_text(link_text)
	Finds an element by link text.
		link_text: The text of the element to be found.
	Usage:driver.find_element_by_link_text(‘Sign In’)
find_element_by_name(name)
	Findsan element by name.
		name: The name of the element to find.
	Usage:driver.find_element_by_name(‘foo’)
find_element_by_partial_link_text(link_text)
	Finds an element by a partial match of its link text.
		link_text: The text of the element to partially match on.
	driver.find_element_by_partial_link_text(‘Sign’)
find_element_by_tag_name(name)
	Finds an element by tag name.
		name: The tag name of the element to find.
	Usage:driver.find_element_by_tag_name(‘foo’)
find_element_by_xpath(xpath)
	Finds an element by xpath.
		xpath - The xpath locator of the element to find.
	Usage:driver.find_element_by_xpath(‘//div/td[1]’)
find_elements(by='id', value=None)

